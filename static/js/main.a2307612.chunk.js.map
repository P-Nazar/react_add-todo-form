{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","services/getUserById.ts","services/generateNewId.ts","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","cn","TodoList","todos","map","getUserById","users","find","generateNewId","todosArr","idArr","Math","max","TodoForm","onSubmit","useState","setTitle","userId","setUserId","hasTitleError","setHasTitleError","hasUserError","setHasUserError","action","method","event","preventDefault","trim","htmlFor","type","placeholder","value","onChange","target","disabled","initialTodos","usersFromServer","App","setTodos","prevTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a2307612.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/User';\n\ninterface Props {\n  user: User\n}\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { email, name } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed = true,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { Todos } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\nimport './TodoList.scss';\n\ninterface Props {\n  todos: Todos\n}\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      <ul>\n        {todos.map(todo => (\n          <li>\n            <TodoInfo todo={todo} key={todo.id} />\n          </li>\n        ))}\n\n      </ul>\n    </section>\n  );\n};\n","import { User, Users } from '../types/User';\n\nexport const getUserById = (id: number, users: Users): User | undefined => users\n  .find(user => user.id === id);\n","import { Todos } from '../types/Todo';\n\nexport const generateNewId = (todosArr: Todos): number => {\n  const idArr = todosArr.map(todo => todo.id);\n\n  return Math.max(...idArr) + 1;\n};\n","import React, { useState } from 'react';\n\nimport { Users } from '../../types/User';\nimport { Todo, Todos } from '../../types/Todo';\nimport { getUserById } from '../../services/getUserById';\nimport { generateNewId } from '../../services/generateNewId';\n\ninterface Props {\n  users: Users\n  onSubmit: (todo: Todo) => void\n  todosArr: Todos\n}\n\nexport const TodoForm: React.FC<Props> = ({\n  users,\n  onSubmit,\n  todosArr,\n}) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasUserError, setHasUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserError(false);\n  };\n\n  const resetForm = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserError(!userId);\n\n    if (!title.trim() || !userId) {\n      // eslint-disable-next-line no-useless-return\n      return;\n    }\n\n    onSubmit({\n      title,\n      userId,\n      completed: false,\n      user: getUserById(userId, users),\n      id: generateNewId(todosArr),\n    });\n\n    resetForm();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"titleInput\">Title: </label>\n        <input\n          id=\"titleInput\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"userSelect\">User: </label>\n        <select\n          data-cy=\"userSelect\"\n          id=\"userSelect\"\n          value={userId}\n          onChange={handleUserChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n          {users.map(({ id, name }) => (\n            <option\n              key={id}\n              value={id}\n            >\n              {name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\n\nimport React, { useState } from 'react';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { getUserById } from './services/getUserById';\nimport { Todo, Todos } from './types/Todo';\nimport { TodoForm } from './components/TodoForm/TodoForm';\n\nconst initialTodos = todosFromServer.map(todo => {\n  return {\n    ...todo,\n    user: getUserById(todo.userId, usersFromServer),\n  };\n});\n\nexport const App:React.FC = () => {\n  const [todos, setTodos] = useState<Todos>(initialTodos);\n\n  const addTodo = (todo: Todo): void => {\n    setTodos((prevTodos) => {\n      return [\n        ...prevTodos, {\n          ...todo,\n        },\n      ];\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm\n        users={usersFromServer}\n        onSubmit={addTodo}\n        todosArr={todos}\n      />\n\n      <TodoList todos={todos} />\n\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}